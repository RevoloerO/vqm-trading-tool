function e({entryPrice:e,stopLoss:t,targetPrice:r}){try{const s=parseFloat(e),o=parseFloat(t),i=parseFloat(r);if(isNaN(s)||isNaN(o)||isNaN(i))return{success:!1,error:"All fields must contain valid numbers",field:"all"};if(!isFinite(s)||!isFinite(o)||!isFinite(i))return{success:!1,error:"Values must be finite numbers",field:"all"};if(s<=0||o<=0||i<=0)return{success:!1,error:"All prices must be greater than zero",field:s<=0?"entry":o<=0?"stop":"target"};const n=1e6;if(s>n||o>n||i>n)return{success:!1,error:`Prices must be below $${n.toLocaleString()}`,field:"all"};const a=o<s&&i>s;if(!(a||o>s&&i<s))return{success:!1,error:"Invalid setup. Long: Stop < Entry < Target. Short: Target < Entry < Stop",field:"relationship"};const c=Math.abs(s-o),l=Math.abs(i-s);if(0===c)return{success:!1,error:"Stop loss cannot equal entry price",field:"stop"};const u=l/c;return{success:!0,data:{riskPerShare:c.toFixed(2),rewardPerShare:l.toFixed(2),rrRatio:u.toFixed(2),positionType:a?"Long":"Short",isValidTrade:u>=1}}}catch(s){return{success:!1,error:"Calculation failed. Please check your inputs.",details:s.message}}}function t({accountSize:e,riskPercent:t,entryPrice:r,stopLoss:s}){try{const o=parseFloat(e),i=parseFloat(t),n=parseFloat(r),a=parseFloat(s);if(isNaN(o)||isNaN(i)||isNaN(n)||isNaN(a))return{success:!1,error:"All fields must contain valid numbers",field:"all"};if(!(isFinite(o)&&isFinite(i)&&isFinite(n)&&isFinite(a)))return{success:!1,error:"Values must be finite numbers",field:"all"};if(o<=0)return{success:!1,error:"Account size must be greater than zero",field:"accountSize"};const c=1e8;if(o>c)return{success:!1,error:`Account size must be below $${c.toLocaleString()}`,field:"accountSize"};if(i<=0||i>100)return{success:!1,error:"Risk percent must be between 0 and 100",field:"riskPercent"};if(n<=0||a<=0)return{success:!1,error:"Entry price and stop loss must be greater than zero",field:n<=0?"entryPrice":"stopLoss"};const l=1e6;if(n>l||a>l)return{success:!1,error:`Prices must be below $${l.toLocaleString()}`,field:"all"};if(n<=a)return{success:!1,error:"Entry price must be greater than stop loss (long position)",field:"relationship"};const u=o*(i/100),d=Math.abs(n-a);if(0===d)return{success:!1,error:"Stop loss cannot equal entry price",field:"stopLoss"};const f=Math.floor(u/d),m=f*n;return 0===f?{success:!1,error:"Risk amount too small to buy any shares. Increase account size or risk percent.",field:"calculation"}:m>o?{success:!1,error:"Position value exceeds account size. Check your inputs.",field:"calculation"}:{success:!0,data:{shares:f,positionValue:m.toFixed(2),riskAmount:u.toFixed(2),riskPerShare:d.toFixed(2),percentOfAccount:(m/o*100).toFixed(2)}}}catch(o){return{success:!1,error:"Calculation failed. Please check your inputs.",details:o.message}}}const r="mtf_checklist_state",s="mtf_checklist_style";function o(e){try{const t={state:e,timestamp:(new Date).getTime(),version:"1.0"};return localStorage.setItem(r,JSON.stringify(t)),!0}catch(t){if("QuotaExceededError"===t.name)try{return n(),localStorage.setItem(r,JSON.stringify(dataToStore)),!0}catch(s){return"undefined"!=typeof window&&window.alert&&alert("Storage quota exceeded. Unable to save checklist. Please clear browser data or export your work."),!1}return!1}}function i(){try{const t=localStorage.getItem(r);if(!t)return null;const s=JSON.parse(t);if(!s||"object"!=typeof s||!s.state||!s.timestamp)return n(),null;const o=(new Date).getTime(),i=864e5;return o-s.timestamp>i?(n(),null):(e=s.state)&&"object"==typeof e&&e.tradingStyle&&e.currentStep&&e.higherTF&&e.midTF&&e.lowerTF?s.state:(n(),null)}catch(t){return n(),null}var e}function n(){try{localStorage.removeItem(r)}catch(e){}}function a(){return null!==i()}function c(){try{const e=localStorage.getItem(r);if(!e)return null;const t=JSON.parse(e);return new Date(t.timestamp)}catch(e){return null}}function l(e,t){try{const r={style:e,config:t,timestamp:(new Date).getTime()};localStorage.setItem(s,JSON.stringify(r))}catch(r){}}function u(){try{const e=localStorage.getItem(s);return e?JSON.parse(e):null}catch(e){return null}}function d(){try{localStorage.removeItem(s)}catch(e){}}function f(e,t){try{const r=function(e,t){const r={exportDate:(new Date).toISOString(),tradingStyle:e.tradingStyle||"swing",timeframes:e.timeframeConfig||{higher:"weekly",mid:"daily",lower:"4hour"},riskPercent:t?.recommendation?.recommendedRisk||2,holdTimeExpected:t?.expectedHoldTime||"2-10 days",higherTFChecks:e.higherTF||e.weekly,midTFChecks:e.midTF||e.daily,lowerTFChecks:e.lowerTF||e.fourHour,positionSize:e.positionSizeRecommendation,finalDecision:t,version:"2.0"};return JSON.stringify(r,null,2)}(e,t),s=new Blob([r],{type:"application/json"}),o=URL.createObjectURL(s),i=document.createElement("a");i.href=o,i.download=`trade-checklist-${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(o)}catch(r){}}export{e as a,l as b,t as c,n as d,d as e,u as f,c as g,a as h,f as i,i as l,o as s};
